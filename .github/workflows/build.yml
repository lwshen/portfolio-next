name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:16
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: password
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      NEXTAUTH_SECRET: s3cr3t
      NEXTAUTH_URL: "http://localhost:3000"
      DISCORD_CLIENT_ID: ""
      DISCORD_CLIENT_SECRET: ""
      RESEND_FROM_NAME: ""
      RESEND_FROM_ADDRESS: ""
      RESEND_API_KEY: ""
      GITHUB_CLIENT_ID: ""
      GITHUB_CLIENT_SECRET: ""

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm db:check
      - run: pnpm db:migrate
      - run: pnpm build
